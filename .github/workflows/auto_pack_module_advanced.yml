name: Auto Pack Module (Advanced)

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'icons/**'
      - 'themes/**'
      - 'addition/module/**'
  pull_request:
    paths:
      - 'icons/**'
      - 'themes/**'
      - 'addition/module/**'
  workflow_dispatch:
    inputs:
      release:
        description: 'Create a release'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      upload_to_cloud:
        description: 'Upload to cloud storage'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  CACHE_VERSION: v1

jobs:
  pack-module:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - name: module
            output: MIUI_Icons_Module.zip
          - name: default-mtz
            output: Default.mtz
          - name: addon
            output: Icons_Addon.zip
          - name: archiving
            output: Icons_Archiving.zip
          - name: explore-mtz
            output: Explore.mtz
          - name: flyme9-mtz
            output: Flyme9.mtz
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          /tmp/icons_cache
        key: ${{ runner.os }}-icons-${{ env.CACHE_VERSION }}-${{ hashFiles('icons/**') }}
        restore-keys: |
          ${{ runner.os }}-icons-${{ env.CACHE_VERSION }}-
          
    - name: Setup environment
      run: |
        echo "BUILD_TIME=$(TZ=':Asia/Shanghai' date '+%Y%m%d%H%M')" >> $GITHUB_ENV
        echo "BUILD_DATE=$(TZ=':Asia/Shanghai' date '+%Y.%m.%d')" >> $GITHUB_ENV
        echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "PACKAGE_NAME=${{ matrix.package.name }}" >> $GITHUB_ENV
        echo "OUTPUT_FILE=${{ matrix.package.output }}" >> $GITHUB_ENV
        
        # 创建缓存目录
        mkdir -p /tmp/icons_cache
        
    - name: Prepare base resources
      run: |
        # 复制默认主题到 addition
        cp -rf ./themes/default ./addition
        
        # 准备基础图标资源
        mkdir -p ./addition/default/res/drawable-xxhdpi/
        cp -rf icons/* ./addition/default/res/drawable-xxhdpi/
        
        # 缓存基础资源
        if [ ! -f "/tmp/icons_cache/base_icons.zip" ]; then
          cd ./addition/default/
          zip -r -9 /tmp/icons_cache/base_icons.zip * >/dev/null
          cd ../..
        else
          cp /tmp/icons_cache/base_icons.zip ./addition/default/icons.zip
        fi
        
    - name: Pack ${{ matrix.package.name }}
      run: |
        case "${{ matrix.package.name }}" in
          "module")
            echo "打包 Magisk 模块..."
            cp -rf ./addition/default/icons.zip ./addition/module/icons
            cd ./addition/module
            
            # 更新 module.prop
            sed -i "s/versionCode=.*/versionCode=${{ env.BUILD_TIME }}/" module.prop
            echo "version=v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }}" >> module.prop
            echo "description=MIUI 完美图标补全模块 - 自动构建于 ${{ env.BUILD_DATE }}" >> module.prop
            
            # 压缩图标
            XZ_OPT=-9 tar cJf icons.tar.xz icons
            rm -rf icons
            
            # 创建模块 zip
            zip -r -9 MIUI_Icons_Module.zip * >/dev/null
            mv MIUI_Icons_Module.zip ../../
            ;;
            
          "default-mtz")
            echo "打包默认 MTZ 主题..."
            cp -rf ./addition/default/icons.zip ./addition/mtz/default/icons
            cd ./addition/mtz/default
            zip -r -9 Default.mtz * >/dev/null
            mv Default.mtz ../../../
            ;;
            
          "addon")
            echo "打包图标插件..."
            cd ./addition/Icons_Addon
            zip -r -9 Icons_Addon.zip * >/dev/null
            mv Icons_Addon.zip ../../
            ;;
            
          "archiving")
            echo "打包归档图标..."
            cd ./addition/Icons_Archiving
            zip -r -9 Icons_Archiving.zip * >/dev/null
            mv Icons_Archiving.zip ../../
            ;;
            
          "explore-mtz")
            echo "打包 Explore 主题..."
            if [ -d "themes/explore" ]; then
              mkdir -p mtztemp/explore/res/drawable-xxhdpi/
              cp -rf icons/* mtztemp/explore/res/drawable-xxhdpi/
              [ -d "themes/explore/icons" ] && cp -rf themes/explore/icons/* mtztemp/explore/res/drawable-xxhdpi/
              [ -d "themes/explore/layer_animating_icons" ] && cp -rf themes/explore/layer_animating_icons mtztemp/explore/
              [ -f "themes/explore/transform_config.xml" ] && cp -rf themes/explore/transform_config.xml mtztemp/explore/
              cd mtztemp/explore/
              zip -r -9 icons.zip * >/dev/null
              cd ../..
              
              cp -rf ./mtztemp/explore/icons.zip ./addition/mtz/explore/icons
              cd addition/mtz/explore
              zip -r -9 Explore.mtz * >/dev/null
              mv Explore.mtz ../../../
            else
              echo "Explore theme not found, creating empty file"
              touch Explore.mtz
            fi
            ;;
            
          "flyme9-mtz")
            echo "打包 Flyme9 主题..."
            if [ -d "themes/flyme9" ]; then
              mkdir -p mtztemp/flyme9/res/drawable-xxhdpi/
              cp -rf icons/* mtztemp/flyme9/res/drawable-xxhdpi/
              [ -d "themes/flyme9/icons" ] && cp -rf themes/flyme9/icons/* mtztemp/flyme9/res/drawable-xxhdpi/
              [ -d "themes/flyme9/layer_animating_icons" ] && cp -rf themes/flyme9/layer_animating_icons mtztemp/flyme9/
              [ -f "themes/flyme9/transform_config.xml" ] && cp -rf themes/flyme9/transform_config.xml mtztemp/flyme9/
              cd mtztemp/flyme9/
              zip -r -9 icons.zip * >/dev/null
              cd ../..
              
              cp -rf ./mtztemp/flyme9/icons.zip ./addition/mtz/flyme9/icons
              cd addition/mtz/flyme9
              zip -r -9 Flyme9.mtz * >/dev/null
              mv Flyme9.mtz ../../../
            else
              echo "Flyme9 theme not found, creating empty file"
              touch Flyme9.mtz
            fi
            ;;
        esac
        
    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.package.name }}-${{ env.BUILD_TIME }}
        path: ${{ matrix.package.output }}
        retention-days: 30
        if-no-files-found: ignore

  collect-and-release:
    needs: pack-module
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup environment
      run: |
        echo "BUILD_TIME=$(TZ=':Asia/Shanghai' date '+%Y%m%d%H%M')" >> $GITHUB_ENV
        echo "BUILD_DATE=$(TZ=':Asia/Shanghai' date '+%Y.%m.%d')" >> $GITHUB_ENV
        echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts/
        
    - name: Organize artifacts
      run: |
        mkdir -p release
        find artifacts -name "*.zip" -o -name "*.mtz" | xargs -I {} cp {} release/
        
        # 统计图标数量
        ICON_COUNT=$(ls -1 icons/ | wc -l)
        echo "ICON_COUNT=$ICON_COUNT" >> $GITHUB_ENV
        
        # 创建构建信息文件
        cat > release/build_info.txt << EOF
        构建时间: ${{ env.BUILD_DATE }}
        Git SHA: ${{ env.GIT_SHA }}
        图标数量: $ICON_COUNT
        提交信息: ${{ github.event.head_commit.message }}
        提交者: ${{ github.event.head_commit.author.name }}
        EOF
        
        # 创建 SHA256 校验文件
        cd release
        sha256sum * > SHA256SUMS.txt
        cd ..
        
    - name: Upload combined artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MIUI-Icons-Complete-Package-${{ env.BUILD_TIME }}
        path: release/
        retention-days: 30
        
    - name: Upload to cloud storage
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.upload_to_cloud == 'true' && secrets.RCLONE_CONFIG != ''
      run: |
        # 安装 rclone
        curl https://rclone.org/install.sh | sudo bash
        
        # 配置 rclone
        mkdir -p ~/.config/rclone/
        echo "${{ secrets.RCLONE_CONFIG }}" | base64 --decode > ~/.config/rclone/rclone.conf
        
        # 上传到云存储
        cd release
        for file in *.zip *.mtz; do
          if [ -f "$file" ]; then
            echo "上传 $file..."
            rclone copy -P "$file" remote:icons/releases/${{ env.BUILD_DATE }}/
          fi
        done
        
    - name: Create Release
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.release == 'true' || github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }}
        name: MIUI Icons Release ${{ env.BUILD_DATE }}
        body: |
          ## 🎉 MIUI 完美图标自动构建
          
          **构建时间**: ${{ env.BUILD_DATE }}
          
          **Git SHA**: `${{ env.GIT_SHA }}`
          
          **图标数量**: ${{ env.ICON_COUNT }}
          
          ### 📝 更新内容
          
          ${{ github.event.head_commit.message }}
          
          By @${{ github.event.head_commit.author.name }}
          
          ### 📦 包含文件
          
          | 文件名 | 说明 | 大小 |
          |--------|------|------|
          | `MIUI_Icons_Module.zip` | Magisk/KernelSU 模块 | ![](https://img.shields.io/github/size/${{ github.repository }}/v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }}/MIUI_Icons_Module.zip) |
          | `Default.mtz` | 默认主题包 | ![](https://img.shields.io/github/size/${{ github.repository }}/v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }}/Default.mtz) |
          | `Icons_Addon.zip` | 图标插件 | ![](https://img.shields.io/github/size/${{ github.repository }}/v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }}/Icons_Addon.zip) |
          | `Icons_Archiving.zip` | 归档图标 | ![](https://img.shields.io/github/size/${{ github.repository }}/v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }}/Icons_Archiving.zip) |
          | `Explore.mtz` | Explore 主题包 | - |
          | `Flyme9.mtz` | Flyme9 主题包 | - |
          
          ### 📱 安装方法
          
          #### Magisk/KernelSU 模块
          1. 下载 `MIUI_Icons_Module.zip`
          2. 在 Magisk/KernelSU 应用中安装模块
          3. 重启设备
          
          #### 主题包
          1. 下载对应的 `.mtz` 文件
          2. 在 MIUI 主题商店中导入
          3. 应用主题
          
          ### 🔒 文件校验
          
          请查看 `SHA256SUMS.txt` 文件以验证下载文件的完整性。
          
          ---
          
          💡 **提示**: 如果遇到问题，请在 [Issues](https://github.com/${{ github.repository }}/issues) 中反馈。
        files: |
          release/*
        draft: false
        prerelease: false
        generate_release_notes: true
        
    - name: Push notification
      if: github.event_name == 'push' && secrets.PUSH_TOKEN != ''
      run: |
        # 发送推送通知
        curl -i -X POST -H 'Content-type':'application/json' \
          -d '{
            "token":"${{ secrets.PUSH_TOKEN }}",
            "title":"MIUI 完美图标模块自动构建完成",
            "content":"**构建成功** \n\n 版本: v${{ env.BUILD_DATE }}-${{ env.GIT_SHA }} \n\n 图标数量: ${{ env.ICON_COUNT }} \n\n 更新内容: ${{ github.event.head_commit.message }} \n\n [查看详情](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})",
            "topic":"MIUI",
            "template":"markdown"
          }' \
          http://www.pushplus.plus/send